generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("NEXT_DATABASE_URL")
  schemas  = ["cookiesnfeels", "storage"]
}

model facebook_connection {
  id       String    @id
  email    String    @unique
  name     String
  picture  String
  register register?

  @@schema("cookiesnfeels")
}

model register {
  id                     String               @id
  created_at             DateTime             @default(now())
  email                  String?              @unique
  user_id                String?              @unique
  facebook_connection_id String?              @unique
  facebook_connection    facebook_connection? @relation(fields: [facebook_connection_id], references: [id], onDelete: Cascade, map: "public_register_facebook_connection_id_fkey")
  user                   user?                @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "public_register_user_id_fkey")

  @@schema("cookiesnfeels")
}

model user {
  id          String    @id
  username    String    @unique
  displayname String?
  picture     String?
  register    register?

  @@schema("cookiesnfeels")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model buckets {
  id                 String    @id
  name               String    @unique(map: "bname")
  owner              String?   @db.Uuid
  created_at         DateTime? @default(now()) @db.Timestamptz(6)
  updated_at         DateTime? @default(now()) @db.Timestamptz(6)
  public             Boolean?  @default(false)
  avif_autodetection Boolean?  @default(false)
  file_size_limit    BigInt?
  allowed_mime_types String[]
  owner_id           String?
  objects            objects[]

  @@schema("storage")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model migrations {
  id          Int       @id
  name        String    @unique @db.VarChar(100)
  hash        String    @db.VarChar(40)
  executed_at DateTime? @default(now()) @db.Timestamp(6)

  @@schema("storage")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model objects {
  id               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  bucket_id        String?
  name             String?
  owner            String?   @db.Uuid
  created_at       DateTime? @default(now()) @db.Timestamptz(6)
  updated_at       DateTime? @default(now()) @db.Timestamptz(6)
  last_accessed_at DateTime? @default(now()) @db.Timestamptz(6)
  metadata         Json?
  path_tokens      String[]  @default(dbgenerated("string_to_array(name, '/'::text)"))
  version          String?
  owner_id         String?
  buckets          buckets?  @relation(fields: [bucket_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "objects_bucketId_fkey")

  @@unique([bucket_id, name], map: "bucketid_objname")
  @@index([name], map: "name_prefix_search")
  @@schema("storage")
}
